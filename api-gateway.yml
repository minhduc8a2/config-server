server:
  port: 8083

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          "[/**]":
            allowedOrigins: "http://localhost:5173"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
      discovery:
        locator:
          enabled: true
      routes:
        - id: user_service_route
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/users/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 3 # requests per second
                redis-rate-limiter.burstCapacity: 5 # max burst capacity
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"
            - name: CircuitBreaker
              args:
                name: userServiceCB
                fallbackUri: forward:/fallback
            # - name: Retry
            #   args:
            #     retries: 3
            #     statuses: INTERNAL_SERVER_ERROR,NOT_IMPLEMENTED,BAD_GATEWAY,SERVICE_UNAVAILABLE,GATEWAY_TIMEOUT
        - id: auth_service_route
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 3 # requests per second
                redis-rate-limiter.burstCapacity: 5 # max burst capacity
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"
            - name: CircuitBreaker
              args:
                name: authServiceCB
                fallbackUri: forward:/fallback
            # - name: Retry
            #   args:
            #     retries: 3
            #     statuses: INTERNAL_SERVER_ERROR,NOT_IMPLEMENTED,BAD_GATEWAY,SERVICE_UNAVAILABLE,GATEWAY_TIMEOUT
            # - name: JwtAuthFilter
        - id: chat_service_route
          uri: lb://CHAT-SERVICE
          predicates:
            - Path=/api/v1/chat/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 3 # requests per second
                redis-rate-limiter.burstCapacity: 5 # max burst capacity
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"
            - name: CircuitBreaker
              args:
                name: chatServiceCB
                fallbackUri: forward:/fallback
            # - name: Retry
            #   args:
            #     retries: 3
            #     statuses: INTERNAL_SERVER_ERROR,NOT_IMPLEMENTED,BAD_GATEWAY,SERVICE_UNAVAILABLE,GATEWAY_TIMEOUT
            # - name: JwtAuthFilter
        - id: message_service_route
          uri: lb://MESSAGE-SERVICE
          predicates:
            - Path=/api/v1/messages/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 3 # requests per second
                redis-rate-limiter.burstCapacity: 5 # max burst capacity
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"
            - name: CircuitBreaker
              args:
                name: messageServiceCB
                fallbackUri: forward:/fallback
            # - name: Retry
            #   args:
            #     retries: 3
            #     statuses: INTERNAL_SERVER_ERROR,NOT_IMPLEMENTED,BAD_GATEWAY,SERVICE_UNAVAILABLE,GATEWAY_TIMEOUT
            # - name: JwtAuthFilter

  data:
    redis:
      host: localhost
      port: 6379

jwt:
  secret: X0iDLiUGr5em1s0hWKnZCMdJ+irvhURKSo1faNKpGxY=
  expiration-time: 900000
  refresh-token:
    expiration-time: 604800000

microservice:
  services:
    - name: USER-SERVICE
      unprotectedEndpoints:
        # - /api/v1/users/email_exists
    - name: AUTH-SERVICE
      unprotectedEndpoints:
        - /api/v1/auth/login
        - /api/v1/auth/register
        - /api/v1/auth/refresh



logging:
  level:
    # org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.gateway.filter.ratelimit: DEBUG

management:
  endpoint:
    gateway:
      access: unrestricted
  endpoints:
    web:
      exposure:
        include: "*"

resilience4j:
  circuitbreaker:
    instances:
      userServiceCB:
        slidingWindowSize: 5
        permittedNumberOfCallsInHalfOpenState: 2
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
